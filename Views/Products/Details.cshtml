<!DOCTYPE html>
﻿@using System;
@using Microsoft.AspNetCore.Identity;
@using AuthSystem.Areas.Identity.Data
@using Microsoft.AspNetCore.Mvc.TagHelpers;
@model AuthSystem.Models.Product
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer


@{
    ViewData["Title"] = "Details";
    string itemid = ""+ Model.Id;
    ApplicationUser thisUser = await UserManager.FindByIdAsync(Model.UserId);
    string GetBase64String(byte[] picture)
    {

        if (picture != null)
        {

            string imreBase64Data = Convert.ToBase64String(picture);
            string imgDataURL = string.Format("data:image/jpeg;base64,{0}", imreBase64Data);
            return imgDataURL;
        }
        return "/images/pfp.jpg";
    }
    string pfp = GetBase64String(thisUser.ProfilePicture);
    string GetPostCodeDistance()
    {
        if (SignInManager.IsSignedIn(User))
        {
            if (UserManager.GetUserAsync(User).Result.Id == thisUser.Id)
                return "";
            string homeCode = UserManager.GetUserAsync(User).Result.PostCode;
            string goalCode = thisUser.PostCode;
            if (homeCode.Substring(0, 2) != goalCode.Substring(0, 2))
                return "This person does not live in the same region as you.";
            if (homeCode.Substring(4, 2) == goalCode.Substring(4, 2))
                return "This person lives near you";
            if (homeCode.Substring(2, 2) == goalCode.Substring(2, 2))
                return "This person lives in your neighborhood.";
            if (Math.Abs(int.Parse(homeCode.Substring(2, 2)) - int.Parse(goalCode.Substring(2, 2))) < 10)
                return "This person lives in a neighborhood near yours.";
            return "This person does not live in a neighborhood near yours.";
        }
        return "Create an account to see if this item is nearby!";
    }
    string GetUserEmail()
    {
        return thisUser.Email;
    }
}

<html lang="en">
<body>
    <div class="container" style="margin-top: -25px;">
        <div class="textbox-grey">
            <a asp-controller="Reports" asp-action="Create" asp-route-repitemid="@itemid">Report this user</a>


            <div class="body-row2">
                <div class="plantdesc">
                    <h1> @localizer["name"]: @Html.DisplayFor(model => model.Name)</h1>

                    <a id="myprods" asp-controller="Products" asp-action="SomeUserProducts" asp-route-publisher="@Model.UserId">@localizer["owner"]: @Html.DisplayFor(model => model.PublisherName)</a>

                    <div class="pfpdiv" style="margin-left: 0px; background-image: url('@pfp')"></div>
                    @if (Model.LatinName != null)
                    {
                    <p>@localizer["latinname"]: @Html.DisplayFor(model => model.LatinName)</p>
                    }
                    <h3 style="text-align:left;">@localizer["description"]:</h3>
                    <p>@Html.DisplayFor(model => model.Description)</p>
                    <ul>
                        <li>@localizer["productsort"]: @Html.DisplayFor(model => model.Kind)</li>
                        <li>@localizer["producttype"]: @Html.DisplayFor(model => model.Type)</li>
                        @*<li>Soil type: @Html.DisplayFor(model => model.Soil)</li>*@
                        <li>Water: @Html.DisplayFor(model => model.Water)</li>
                        <li>@localizer["light"]: @Html.DisplayFor(model => model.Light) </li>
                        <li>@localizer["trade"]: @Html.DisplayFor(model => model.Trade)</li>
                        <li>@localizer["delivery"]: @Html.DisplayFor(model => model.Delivery)</li>
                    </ul>

                    <p>@localizer["productdate"]: @Html.DisplayFor(model => model.ProductDate)</p>
                    <p>@GetPostCodeDistance()</p>
                </div>
                <div class="image1">
                    <img src="@GetBase64String(Model.Picture)" style="width: 100%; height: auto; display: inline-block; border-radius: 15px;" />

                    @*
        @Html.DisplayNameFor(model => model.Picture)
        @Html.DisplayFor(model => model.Trade)
                    *@
                    @*<img src="@String.Format("data:image/png;base64,{0}", Convert.ToBase64String(@Model.getImage()))" style="width: 100%; height: auto; display: inline-block; border-radius: 15px;">*@

                    @if (SignInManager.IsSignedIn(User))
                    {
                        if (thisUser.Id != UserManager.GetUserAsync(User).Result.Id)
                        {
                           <a href="mailto: @GetUserEmail()?subject=@Html.DisplayFor(model => model.Name)&body=Hallo,%20 @Html.DisplayFor(model => model.PublisherName)%0D%0A%0D%0A" class="edit" id="sv">@localizer["chat"]</a>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="body-row2">
            @if (Model.PictureTwo != null && Model.PictureThree != null)
            {
            <div class="title">
                <h5>@localizer["otherpics"]</h5>
            </div>
            }
            @if (Model.PictureTwo != null)
            {
                <div class="image2" style="margin-right:30px;">
                    <img src="@GetBase64String(Model.PictureTwo)" class="mor-ima">
                </div>
           
            }
            @*<div class="image2"  style="margin-right:30px;">
                    <img src="https://www.freeimageslive.co.uk/files/images009/seeds.jpg" class="mor-ima">
              </div> *@
            
            @if (Model.PictureThree != null)
            {
                <div class="image2">
                    <img src="@GetBase64String(Model.PictureThree)" class="mor-ima">
                </div>
            }
        <div class="button-details">
           @if (SignInManager.IsSignedIn(User))
           {
                 @if (thisUser.Id == UserManager.GetUserAsync(User).Result.Id)
                 {

            <a class="edit" id="sv" asp-action="Edit" asp-route-id="@Model.Id">@localizer["edit"]</a>
            <a class="edit" id="sv" asp-action="Delete" asp-route-id="@Model.Id">@localizer["delete"]</a>
                 }
            }
        <a class="edit" id="sv" href="##" onClick="history.go(-1); return false;" style=" margin-right: 0px !important;">@localizer["backtoprodpage"]</a>
            </div>
        </div>
    </div>
</body>
</html>

