@using Microsoft.AspNetCore.Identity
@using AuthSystem.Areas.Identity.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{@*
        <li class="nav-item">
            <a id="manage" class="navbar-brand" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserAsync(User).Result.Nickname!</a>
        </li>*@
<li class="nav-item">
    <a class="navbar-brand" id="profile" asp-area="Identity" asp-page="/Account/Profile">Profile</a>
</li>
<li class="nav-item">
    <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
        <button id="logout" class="navbar-brand" style="padding-left: 0px; margin-right:0px;">Logout</button>
    </form>
</li>
}
else
{
<li class="nav-item">
    <a class="navbar-brand" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
</li>
<li class="nav-item">
    <a class="navbar-brand" id="login" asp-area="Identity" asp-page="/Account/Login" style="margin-right:0px;">Login</a>
</li>
}
